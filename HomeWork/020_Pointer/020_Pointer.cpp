#include <iostream>

int main()
{
    {

        // 모든 포인터는 64비트에서 8바이트 크기를 가진다
        //              32비트일땐 4바이트 
        
        // 4바이트 정수형
        // int

        {
            // 8바이트 정수형
            __int64 Value = 0;
        }

        // 포인터란 c++의 자료형의 한 형태며
        // 자료형 뒤에 *을 붙이는 문법을 통해서 선언한다
        /*int* Ptr;*/

        // 일반적인 자료형이 가능하고
        // 배열과는 융합할 수 없다
        int* Ptr;
        bool* Ptrb;

        // 램에서의 위치를 의미하게 된다

        int Value = 10;

        // 이름이 값 그 자체를 의미하게 된다.
        // 100번지에 있는 10이 되는것
        Value < 9;

        // Value가 표현하는 값이 2가지 있다
        // 내부의 자신의 진짜 값 10
        // 그 이름을 통해서 램에 존재하게 되는 자신의 위치인 100번지
        int* ValuePtr = &Value;


        // 그 주소(램에서의 위치의 정수값)를 전문적으로 다루는 

        // 형변환이라는 것을 맛만 보여드릴겁니다
        // 어떤 자료형 앞에 (자료형) 이 자료형으로 바꿀 수 있으면
        // 바꿔달라는 뜻이다

        // 운영체제가 임의대로 주소를 부여해 주는 것은 virtual 주소라고 한다
        __int64 Address = 0;
        Address = (__int64)ValuePtr;

        // 코드로 쳐졌다면 램의 어딘가에는 존재해야 한다
        // 모든건 위치가 있고 크기가 있어야 한다
        // 주소값이라는 것은 램의 위치를 표현하는 정수인데
        // bool*
        // int*
        // 크기가 다를까??
    }

    {
        
    }
        
}